<?php 

/**
 * Implements hook_linkit_attributes().
 */
function mymodule_linkit_attributes($profile) {
  // The array key here will be the attribute that is inserted.
  // I.E <a my_attribute="value"></a>.
  $attributes['my_attribute'] = array(
    '#type' => 'textfield',
    '#title' => t('my_attribute'),
    '#maxlength' => 255,  
    '#size' => 40,
    '#default_value' => '',
    '#weight' => isset($profile['attributes']['my_attribute']['weight']) ? $profile['attributes']['my_attribute']['weight'] : 0,
  );

  return $attributes;
}

/**
 * Implements hook_linkit_attributes_alter().
 */
function mymodule_linkit_attributes_alter(&$attributes) {
  $attributes['rel']['#type'] = 'select';
  $attributes['rel']['#title'] = t('Rel select');
  $attributes['rel']['#options'] = array(
    '' => t('None'), 
    'now-follow' => t('No follow'), 
    'other-rel' =>t('Other rel'),
  );
  $attributes['rel']['#size'] = 1;
}

/**
 * Implements hook_linkit_plugins().
 */
function mymodule_linkit_plugins() {
  $plugins['myplugin'] = array(
    'title' => t('My plugin'),
    'description' => t('My plugin implementation'),
    'autocomplete callback' => 'mymodule_autocomplete',
  );

  $plugins['test2'] = array(
    'title' => t('test2'),
    'description' => t('Test hook implementation 2'),
    'autocomplete callback' => 'linkit_test_autocomplete',
  );

  return $plugins;
}

function mymodule_autocomplete() {
  
  $result = array();
  
  for($i = 0; $i < 10; $i++) {
    $result[$i] = new stdClass;
    $result[$i]->title = 'Test ' . $i;
    $result[$i]->path = 'test-path/' . $i;
    $result[$i]->description = 'Test description ' . $i;
  }
 
  $matches = array();

  foreach ($result AS $test) {
    $matches[] = array(
      'title' => $test->title,
      'description' => $test->description,
      'path' => $test->path,
      'group' => t('Test'),
    );
  }
  return $matches;
}

function mymodule_query_linkit_user_autocomplete_alter(QueryAlterableInterface $query) {
  // Existing query orderBys.
  $orderby =& $query->getOrderBy();
}